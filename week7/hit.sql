-- MySQL Script generated by MySQL Workbench
-- Fri Mar 24 11:03:48 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------


-- -----------------------------------------------------
-- Table `mydb`.`Song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS 'Song' (
  `id` INT NOT NULL,
  `SongName` VARCHAR(45) NULL,
  `Relatedate` DATE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Artiest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Artiest` (
  `id` INT NOT NULL,
  `Naam` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`notering`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notering` (
  `id` INT NOT NULL,
  `Start` DATE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Toplist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Toplist` (
  `id` INT NOT NULL,
  `Relaesedate` DATE NULL,
  `Naam` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`lied`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lied` (
  `Artiest_id` INT NOT NULL,
  `Song_id` INT NOT NULL,
  `notering_id` INT NOT NULL,
  PRIMARY KEY (`Artiest_id`, `Song_id`, `notering_id`),
  INDEX `fk_lied_Song1_idx` (`Song_id` ASC),
  INDEX `fk_lied_notering1_idx` (`notering_id` ASC),
  CONSTRAINT `fk_lied_Artiest1`
    FOREIGN KEY (`Artiest_id`)
    REFERENCES `mydb`.`Artiest` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lied_Song1`
    FOREIGN KEY (`Song_id`)
    REFERENCES `mydb`.`Song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lied_notering1`
    FOREIGN KEY (`notering_id`)
    REFERENCES `mydb`.`notering` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`weeklijst`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `weeklijst` (
  `id` INT NOT NULL,
  `week_nummer` INT NULL,
  `jaartal` DATE NULL,
  `datum` DATE NULL,
  `Toplist_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Toplist_id`),
  INDEX `fk_weeklijst_Toplist1_idx` (`Toplist_id` ASC),
  CONSTRAINT `fk_weeklijst_Toplist1`
    FOREIGN KEY (`Toplist_id`)
    REFERENCES `mydb`.`Toplist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`lijst`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lijst` (
  `weeklijst_id` INT NOT NULL,
  `weeklijst_Toplist_id` INT NOT NULL,
  `lied_Artiest_id` INT NOT NULL,
  `lied_Song_id` INT NOT NULL,
  `lied_notering_id` INT NOT NULL,
  PRIMARY KEY (`weeklijst_id`, `weeklijst_Toplist_id`, `lied_Artiest_id`, `lied_Song_id`, `lied_notering_id`),
  INDEX `fk_lijst_lied1_idx` (`lied_Artiest_id` ASC, `lied_Song_id` ASC, `lied_notering_id` ASC),
  CONSTRAINT `fk_lijst_weeklijst1`
    FOREIGN KEY (`weeklijst_id` , `weeklijst_Toplist_id`)
    REFERENCES `mydb`.`weeklijst` (`id` , `Toplist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lijst_lied1`
    FOREIGN KEY (`lied_Artiest_id` , `lied_Song_id` , `lied_notering_id`)
    REFERENCES `mydb`.`lied` (`Artiest_id` , `Song_id` , `notering_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
